{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "authorship_tag": "ABX9TyNqYwOfwwIglJPZPqc4AX4T",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ShapatinAA/smgmo/blob/main/5%20lab%20CIFAR10\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 709
        },
        "id": "6uMwxTwqLUzG",
        "outputId": "9a6484cf-f9cb-4b89-de0c-0f55d9217bb5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 170498071/170498071 [00:12<00:00, 13964845.68it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Extracting ./data/cifar-10-python.tar.gz to ./data\n",
            "Files already downloaded and verified\n",
            "Epoch 1/10, Loss: 2.3055769762992857\n",
            "Epoch 2/10, Loss: 2.3045187001228333\n",
            "Epoch 3/10, Loss: 2.3035432472229003\n",
            "Epoch 4/10, Loss: 2.3026077189445497\n",
            "Epoch 5/10, Loss: 2.301677092552185\n",
            "Epoch 6/10, Loss: 2.3007258648872377\n",
            "Epoch 7/10, Loss: 2.2997172031402586\n",
            "Epoch 8/10, Loss: 2.2986040120124818\n",
            "Epoch 9/10, Loss: 2.2973431844711305\n",
            "Epoch 10/10, Loss: 2.2958959283828735\n",
            "Test Accuracy: 12.77%\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import torch\n",
        "import torchvision\n",
        "import torchvision.transforms as trnsfrms\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay\n",
        "\n",
        "# Step 1: Load CIFAR-10 dataset\n",
        "transform = trnsfrms.Compose([\n",
        "    trnsfrms.ToTensor(),\n",
        "    trnsfrms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n",
        "])\n",
        "\n",
        "train_dataset = torchvision.datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n",
        "test_dataset = torchvision.datasets.CIFAR10(root='./data', train=False, download=True, transform=transform)\n",
        "\n",
        "train_loader = torch.utils.data.DataLoader(train_dataset, batch_size=100, shuffle=True, num_workers=2)\n",
        "test_loader = torch.utils.data.DataLoader(test_dataset, batch_size=100, shuffle=False, num_workers=2)\n",
        "\n",
        "# Step 2: Define the CNN model\n",
        "class CNN(nn.Module):\n",
        "    def __init__(self, num_of_blocks, stride_conv, stride_pool, kernel_conv_size, kernel_pool_size, out_channels=6, in_channels=3):\n",
        "        super(CNN, self).__init__()\n",
        "        layers = [\n",
        "            nn.Conv2d(in_channels, out_channels, kernel_conv_size, stride=stride_conv),\n",
        "            nn.ReLU(),\n",
        "            nn.MaxPool2d(kernel_pool_size, stride=stride_pool)\n",
        "        ]\n",
        "\n",
        "        for _ in range(num_of_blocks - 1):\n",
        "            layers.extend([\n",
        "                nn.Conv2d(out_channels, out_channels, kernel_conv_size, stride=stride_conv),\n",
        "                nn.ReLU(),\n",
        "                nn.MaxPool2d(kernel_pool_size, stride=stride_pool)\n",
        "            ])\n",
        "\n",
        "        layers.append(nn.Flatten())\n",
        "\n",
        "        self.model = nn.Sequential(*layers)\n",
        "\n",
        "        with torch.no_grad():\n",
        "            sample_input = torch.zeros(1, in_channels, 32, 32)\n",
        "            sample_output = self.model(sample_input)\n",
        "            linear_input_dim = sample_output.shape[1]\n",
        "\n",
        "        self.fc = nn.Sequential(\n",
        "            nn.Linear(linear_input_dim, 120),\n",
        "            nn.ReLU(),\n",
        "            nn.Linear(120, 84),\n",
        "            nn.ReLU(),\n",
        "            nn.Linear(84, 10)\n",
        "        )\n",
        "\n",
        "    def forward(self, x):\n",
        "        x = self.model(x)\n",
        "        x = self.fc(x)\n",
        "        return x\n",
        "\n",
        "    def fit(self, train_loader, epochs, lr):\n",
        "        criterion = nn.CrossEntropyLoss()\n",
        "        optimizer = optim.SGD(self.parameters(), lr=lr)\n",
        "        for epoch in range(epochs):\n",
        "            running_loss = 0.0\n",
        "            for i, data in enumerate(train_loader, 0):\n",
        "                inputs, labels = data\n",
        "                optimizer.zero_grad()\n",
        "                outputs = self(inputs)\n",
        "                loss = criterion(outputs, labels)\n",
        "                loss.backward()\n",
        "                optimizer.step()\n",
        "                running_loss += loss.item()\n",
        "            print(f'Epoch {epoch + 1}/{epochs}, Loss: {running_loss / len(train_loader)}')\n",
        "\n",
        "    def predict(self, test_loader):\n",
        "        all_preds = []\n",
        "        with torch.no_grad():\n",
        "            for data in test_loader:\n",
        "                images, _ = data\n",
        "                outputs = self(images)\n",
        "                _, predicted = torch.max(outputs, 1)\n",
        "                all_preds.extend(predicted.cpu().numpy())\n",
        "        return np.array(all_preds)\n",
        "\n",
        "# Step 3: Train and evaluate the model\n",
        "model = CNN(num_of_blocks=2, stride_conv=1, stride_pool=2, kernel_conv_size=3, kernel_pool_size=2, out_channels=16, in_channels=3)\n",
        "model.fit(train_loader, epochs=10, lr=0.001)\n",
        "\n",
        "# Predict and evaluate\n",
        "y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "y_pred = model.predict(test_loader)\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(f'Test Accuracy: {accuracy * 100:.2f}%')\n",
        "\n",
        "# Draw confusion matrix\n",
        "def draw_confusion_matrix(y_pred, y_true):\n",
        "    matrix = confusion_matrix(y_true, y_pred)\n",
        "    ConfusionMatrixDisplay(matrix, display_labels=range(10)).plot(include_values=True, cmap='Blues')\n",
        "\n",
        "draw_confusion_matrix(y_pred, y_test)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 3: Test different learning rates\n",
        "lrs = [0.3, 0.1, 0.03, 0.01, 0.003, 0.001]\n",
        "accuracy_scores = []\n",
        "\n",
        "for lr in lrs:\n",
        "    model = CNN(num_of_blocks=1, stride_conv=1, stride_pool=2, kernel_conv_size=5, kernel_pool_size=2, out_channels=16, in_channels=3)\n",
        "    model.fit(train_loader, epochs=5, lr=lr)\n",
        "    y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "    y_pred = model.predict(test_loader)\n",
        "    accuracy = accuracy_score(y_test, y_pred)\n",
        "    accuracy_scores.append(accuracy)\n",
        "    print(f'Accuracy with learning rate {lr}: {accuracy}')\n",
        "\n",
        "max_lr = lrs[accuracy_scores.index(max(accuracy_scores))]\n",
        "print(f'Best learning rate: {max_lr}')\n",
        "\n",
        "plt.plot(lrs, accuracy_scores)\n",
        "plt.xscale('log')\n",
        "plt.xlabel('Learning Rate')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('Accuracy vs Learning Rate')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dyd-zDn8MFyO",
        "outputId": "ac34d6f9-fb42-47a5-aeaa-8e987e0d0a86"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/5, Loss: 1.6835093650817872\n",
            "Epoch 2/5, Loss: 1.3079371764659882\n",
            "Epoch 3/5, Loss: 1.1161194825172425\n",
            "Epoch 4/5, Loss: 0.9831580610275269\n",
            "Epoch 5/5, Loss: 0.8708641057014466\n",
            "Accuracy with learning rate 0.3: 0.6243\n",
            "Epoch 1/5, Loss: 1.738899139881134\n",
            "Epoch 2/5, Loss: 1.3242150329351425\n",
            "Epoch 3/5, Loss: 1.148619248509407\n",
            "Epoch 4/5, Loss: 1.0121133375167846\n",
            "Epoch 5/5, Loss: 0.8999441908597946\n",
            "Accuracy with learning rate 0.1: 0.6489\n",
            "Epoch 1/5, Loss: 1.9336993715763091\n",
            "Epoch 2/5, Loss: 1.501189742565155\n",
            "Epoch 3/5, Loss: 1.3422349712848662\n",
            "Epoch 4/5, Loss: 1.2393902229070664\n",
            "Epoch 5/5, Loss: 1.1535163698196411\n",
            "Accuracy with learning rate 0.03: 0.5801\n",
            "Epoch 1/5, Loss: 2.2156683065891265\n",
            "Epoch 2/5, Loss: 1.8720653412342072\n",
            "Epoch 3/5, Loss: 1.6829006621837617\n",
            "Epoch 4/5, Loss: 1.5494662954807281\n",
            "Epoch 5/5, Loss: 1.4513289821147919\n",
            "Accuracy with learning rate 0.01: 0.4828\n",
            "Epoch 1/5, Loss: 2.2977856512069703\n",
            "Epoch 2/5, Loss: 2.2715303292274474\n",
            "Epoch 3/5, Loss: 2.1914219570159914\n",
            "Epoch 4/5, Loss: 2.047709485530853\n",
            "Epoch 5/5, Loss: 1.934009189605713\n",
            "Accuracy with learning rate 0.003: 0.3322\n",
            "Epoch 1/5, Loss: 2.302467041492462\n",
            "Epoch 2/5, Loss: 2.295724009513855\n",
            "Epoch 3/5, Loss: 2.2882625432014465\n",
            "Epoch 4/5, Loss: 2.2783840479850768\n",
            "Epoch 5/5, Loss: 2.2639636926651\n",
            "Accuracy with learning rate 0.001: 0.2145\n",
            "Best learning rate: 0.1\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 4: Test different convolution kernel sizes\n",
        "conv_kernel_sizes = [3, 5, 7, 9, 11, 13]\n",
        "accuracy_scores = []\n",
        "\n",
        "for conv_kernel_size in conv_kernel_sizes:\n",
        "    model = CNN(num_of_blocks=1, stride_conv=1, stride_pool=2, kernel_conv_size=conv_kernel_size, kernel_pool_size=2, out_channels=16, in_channels=3)\n",
        "    model.fit(train_loader, epochs=10, lr=max_lr)\n",
        "    y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "    y_pred = model.predict(test_loader)\n",
        "    accuracy = accuracy_score(y_test, y_pred)\n",
        "    accuracy_scores.append(accuracy)\n",
        "    print(f'Accuracy with convolution kernel size {conv_kernel_size}: {accuracy}')\n",
        "\n",
        "max_conv_kernel_size = conv_kernel_sizes[accuracy_scores.index(max(accuracy_scores))]\n",
        "print(f'Best convolution kernel size: {max_conv_kernel_size}')\n",
        "\n",
        "plt.plot(conv_kernel_sizes, accuracy_scores)\n",
        "plt.xlabel('Convolution Kernel Size')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('Accuracy vs Convolution Kernel Size')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "WaRI5RbkRHT7",
        "outputId": "b3b6d034-5841-442a-b2e5-f5e253ca6ac7"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10, Loss: 1.751287854194641\n",
            "Epoch 2/10, Loss: 1.3384863216876983\n",
            "Epoch 3/10, Loss: 1.1765404270887374\n",
            "Epoch 4/10, Loss: 1.0539289367198945\n",
            "Epoch 5/10, Loss: 0.9439719502925873\n",
            "Epoch 6/10, Loss: 0.8508263092041015\n",
            "Epoch 7/10, Loss: 0.766477089047432\n",
            "Epoch 8/10, Loss: 0.6889964325428009\n",
            "Epoch 9/10, Loss: 0.607081920325756\n",
            "Epoch 10/10, Loss: 0.5362586202025413\n",
            "Accuracy with convolution kernel size 3: 0.6336\n",
            "Epoch 1/10, Loss: 1.7141765081882476\n",
            "Epoch 2/10, Loss: 1.3301256532669068\n",
            "Epoch 3/10, Loss: 1.1643375691175462\n",
            "Epoch 4/10, Loss: 1.0411848429441453\n",
            "Epoch 5/10, Loss: 0.9410173525810241\n",
            "Epoch 6/10, Loss: 0.8394596668481826\n",
            "Epoch 7/10, Loss: 0.7472850495576858\n",
            "Epoch 8/10, Loss: 0.6687565702199936\n",
            "Epoch 9/10, Loss: 0.5939997718334198\n",
            "Epoch 10/10, Loss: 0.5170727217793465\n",
            "Accuracy with convolution kernel size 5: 0.6483\n",
            "Epoch 1/10, Loss: 1.7039889414310456\n",
            "Epoch 2/10, Loss: 1.3475930943489074\n",
            "Epoch 3/10, Loss: 1.1999069998264313\n",
            "Epoch 4/10, Loss: 1.0861661922931671\n",
            "Epoch 5/10, Loss: 0.9814726856946945\n",
            "Epoch 6/10, Loss: 0.8953342596292496\n",
            "Epoch 7/10, Loss: 0.812111229300499\n",
            "Epoch 8/10, Loss: 0.7398191267848014\n",
            "Epoch 9/10, Loss: 0.6766954585909843\n",
            "Epoch 10/10, Loss: 0.6094611561894416\n",
            "Accuracy with convolution kernel size 7: 0.6454\n",
            "Epoch 1/10, Loss: 1.7116857080459595\n",
            "Epoch 2/10, Loss: 1.3711433401107789\n",
            "Epoch 3/10, Loss: 1.225455498933792\n",
            "Epoch 4/10, Loss: 1.1055738618373872\n",
            "Epoch 5/10, Loss: 1.0122643488645553\n",
            "Epoch 6/10, Loss: 0.9359517059326172\n",
            "Epoch 7/10, Loss: 0.8563562065362931\n",
            "Epoch 8/10, Loss: 0.7914959828853607\n",
            "Epoch 9/10, Loss: 0.7263250804543495\n",
            "Epoch 10/10, Loss: 0.6728798701167107\n",
            "Accuracy with convolution kernel size 9: 0.6405\n",
            "Epoch 1/10, Loss: 1.7300052733421325\n",
            "Epoch 2/10, Loss: 1.4026035039424896\n",
            "Epoch 3/10, Loss: 1.260722456097603\n",
            "Epoch 4/10, Loss: 1.153305744767189\n",
            "Epoch 5/10, Loss: 1.0751010105609893\n",
            "Epoch 6/10, Loss: 1.0015971261262893\n",
            "Epoch 7/10, Loss: 0.9362724585533142\n",
            "Epoch 8/10, Loss: 0.878301702618599\n",
            "Epoch 9/10, Loss: 0.81726318359375\n",
            "Epoch 10/10, Loss: 0.7678680872321129\n",
            "Accuracy with convolution kernel size 11: 0.6325\n",
            "Epoch 1/10, Loss: 1.7588393852710724\n",
            "Epoch 2/10, Loss: 1.4467115304470062\n",
            "Epoch 3/10, Loss: 1.3206153423786164\n",
            "Epoch 4/10, Loss: 1.2351419905424117\n",
            "Epoch 5/10, Loss: 1.154885796070099\n",
            "Epoch 6/10, Loss: 1.0893521493673324\n",
            "Epoch 7/10, Loss: 1.028893612265587\n",
            "Epoch 8/10, Loss: 0.9754652338027954\n",
            "Epoch 9/10, Loss: 0.9189712688922882\n",
            "Epoch 10/10, Loss: 0.8794612703323365\n",
            "Accuracy with convolution kernel size 13: 0.6079\n",
            "Best convolution kernel size: 5\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 5: Test different convolution strides\n",
        "conv_strides = [1, 2, 3]\n",
        "accuracy_scores = []\n",
        "\n",
        "for conv_stride in conv_strides:\n",
        "    model = CNN(num_of_blocks=1, stride_conv=conv_stride, stride_pool=2, kernel_conv_size=max_conv_kernel_size, kernel_pool_size=2, out_channels=16, in_channels=3)\n",
        "    model.fit(train_loader, epochs=10, lr=max_lr)\n",
        "    y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "    y_pred = model.predict(test_loader)\n",
        "    accuracy = accuracy_score(y_test, y_pred)\n",
        "    accuracy_scores.append(accuracy)\n",
        "    print(f'Accuracy with convolution stride {conv_stride}: {accuracy}')\n",
        "\n",
        "max_conv_stride = conv_strides[accuracy_scores.index(max(accuracy_scores))]\n",
        "print(f'Best convolution stride: {max_conv_stride}')\n",
        "\n",
        "plt.plot(conv_strides, accuracy_scores)\n",
        "plt.xlabel('Convolution Stride')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('Accuracy vs Convolution Stride')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "GIViZwRmRN0a",
        "outputId": "0f068609-ec78-4379-ab24-6a64e0349f33"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10, Loss: 1.7095133121013641\n",
            "Epoch 2/10, Loss: 1.339443085193634\n",
            "Epoch 3/10, Loss: 1.1796999125480652\n",
            "Epoch 4/10, Loss: 1.0588498239517212\n",
            "Epoch 5/10, Loss: 0.9461146079301834\n",
            "Epoch 6/10, Loss: 0.853346006155014\n",
            "Epoch 7/10, Loss: 0.7596628159284592\n",
            "Epoch 8/10, Loss: 0.6793740566372871\n",
            "Epoch 9/10, Loss: 0.5958514240384102\n",
            "Epoch 10/10, Loss: 0.5226924980282783\n",
            "Accuracy with convolution stride 1: 0.6302\n",
            "Epoch 1/10, Loss: 1.7726200325489043\n",
            "Epoch 2/10, Loss: 1.3740396809577942\n",
            "Epoch 3/10, Loss: 1.2263558584451675\n",
            "Epoch 4/10, Loss: 1.1218858242034913\n",
            "Epoch 5/10, Loss: 1.037341208577156\n",
            "Epoch 6/10, Loss: 0.9730674057006836\n",
            "Epoch 7/10, Loss: 0.913063604593277\n",
            "Epoch 8/10, Loss: 0.8540425733327865\n",
            "Epoch 9/10, Loss: 0.8051662060022354\n",
            "Epoch 10/10, Loss: 0.75669846367836\n",
            "Accuracy with convolution stride 2: 0.6402\n",
            "Epoch 1/10, Loss: 1.8606203100681304\n",
            "Epoch 2/10, Loss: 1.4519860768318176\n",
            "Epoch 3/10, Loss: 1.3013013944625855\n",
            "Epoch 4/10, Loss: 1.2022294994592666\n",
            "Epoch 5/10, Loss: 1.1315084085464477\n",
            "Epoch 6/10, Loss: 1.074526282787323\n",
            "Epoch 7/10, Loss: 1.019665792107582\n",
            "Epoch 8/10, Loss: 0.9735585286617279\n",
            "Epoch 9/10, Loss: 0.9347997863292694\n",
            "Epoch 10/10, Loss: 0.8936110306978226\n",
            "Accuracy with convolution stride 3: 0.6324\n",
            "Best convolution stride: 2\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 6: Test different pooling kernel sizes\n",
        "pool_kernel_sizes = [2, 3, 4, 5, 6, 7]\n",
        "accuracy_scores = []\n",
        "\n",
        "for pool_kernel_size in pool_kernel_sizes:\n",
        "    model = CNN(num_of_blocks=1, stride_conv=max_conv_stride, stride_pool=2, kernel_conv_size=max_conv_kernel_size, kernel_pool_size=pool_kernel_size, out_channels=16, in_channels=3)\n",
        "    model.fit(train_loader, epochs=5, lr=max_lr)\n",
        "    y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "    y_pred = model.predict(test_loader)\n",
        "    accuracy = accuracy_score(y_test, y_pred)\n",
        "    accuracy_scores.append(accuracy)\n",
        "    print(f'Accuracy with pool kernel size {pool_kernel_size}: {accuracy}')\n",
        "\n",
        "max_pool_kernel_size = pool_kernel_sizes[accuracy_scores.index(max(accuracy_scores))]\n",
        "print(f'Best pool kernel size: {max_pool_kernel_size}')\n",
        "\n",
        "plt.plot(pool_kernel_sizes, accuracy_scores)\n",
        "plt.xlabel('Pool Kernel Size')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('Accuracy vs Pool Kernel Size')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "m1KRPZAHRPwW",
        "outputId": "86eb7f4d-356e-46fa-a516-cfce2200b53d"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/5, Loss: 1.8107843041419982\n",
            "Epoch 2/5, Loss: 1.3897776494026184\n",
            "Epoch 3/5, Loss: 1.2389640622138978\n",
            "Epoch 4/5, Loss: 1.1284120956659316\n",
            "Epoch 5/5, Loss: 1.0394378633499146\n",
            "Accuracy with pool kernel size 2: 0.6263\n",
            "Epoch 1/5, Loss: 1.8158888142108918\n",
            "Epoch 2/5, Loss: 1.4068639533519745\n",
            "Epoch 3/5, Loss: 1.2604940415620804\n",
            "Epoch 4/5, Loss: 1.1624084533452987\n",
            "Epoch 5/5, Loss: 1.089520987033844\n",
            "Accuracy with pool kernel size 3: 0.6152\n",
            "Epoch 1/5, Loss: 1.773023690700531\n",
            "Epoch 2/5, Loss: 1.4002408872842789\n",
            "Epoch 3/5, Loss: 1.2601674970388412\n",
            "Epoch 4/5, Loss: 1.169980541229248\n",
            "Epoch 5/5, Loss: 1.0948530188798904\n",
            "Accuracy with pool kernel size 4: 0.5962\n",
            "Epoch 1/5, Loss: 1.8346545293331147\n",
            "Epoch 2/5, Loss: 1.4853495645523072\n",
            "Epoch 3/5, Loss: 1.3472855509519577\n",
            "Epoch 4/5, Loss: 1.2566562091112137\n",
            "Epoch 5/5, Loss: 1.1967651617527009\n",
            "Accuracy with pool kernel size 5: 0.5825\n",
            "Epoch 1/5, Loss: 1.8635658974647522\n",
            "Epoch 2/5, Loss: 1.5070172364711762\n",
            "Epoch 3/5, Loss: 1.3546400921344757\n",
            "Epoch 4/5, Loss: 1.2691712193489075\n",
            "Epoch 5/5, Loss: 1.2050508326292038\n",
            "Accuracy with pool kernel size 6: 0.5662\n",
            "Epoch 1/5, Loss: 1.9355120725631714\n",
            "Epoch 2/5, Loss: 1.6045705966949464\n",
            "Epoch 3/5, Loss: 1.48897154712677\n",
            "Epoch 4/5, Loss: 1.413861543416977\n",
            "Epoch 5/5, Loss: 1.3553475391864778\n",
            "Accuracy with pool kernel size 7: 0.5308\n",
            "Best pool kernel size: 2\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 7: Test different pooling strides\n",
        "pool_strides = [1, 2, 3]\n",
        "accuracy_scores = []\n",
        "\n",
        "for pool_stride in pool_strides:\n",
        "    model = CNN(num_of_blocks=1, stride_conv=max_conv_stride, stride_pool=pool_stride, kernel_conv_size=max_conv_kernel_size, kernel_pool_size=max_pool_kernel_size, out_channels=16, in_channels=3)\n",
        "    model.fit(train_loader, epochs=10, lr=max_lr)\n",
        "    y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "    y_pred = model.predict(test_loader)\n",
        "    accuracy = accuracy_score(y_test, y_pred)\n",
        "    accuracy_scores.append(accuracy)\n",
        "    print(f'Accuracy with pool stride {pool_stride}: {accuracy}')\n",
        "\n",
        "max_pool_stride = pool_strides[accuracy_scores.index(max(accuracy_scores))]\n",
        "print(f'Best pool stride: {max_pool_stride}')\n",
        "\n",
        "plt.plot(pool_strides, accuracy_scores)\n",
        "plt.xlabel('Pool Stride')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('Accuracy vs Pool Stride')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "lfOgbFW5RRiU",
        "outputId": "f6e147d1-8041-411a-e167-52708298bcdf"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10, Loss: 1.699338692188263\n",
            "Epoch 2/10, Loss: 1.3512044734954833\n",
            "Epoch 3/10, Loss: 1.190751028060913\n",
            "Epoch 4/10, Loss: 1.0763773881196976\n",
            "Epoch 5/10, Loss: 0.9781319979429245\n",
            "Epoch 6/10, Loss: 0.8922950981855392\n",
            "Epoch 7/10, Loss: 0.8169481993913651\n",
            "Epoch 8/10, Loss: 0.7419644846320153\n",
            "Epoch 9/10, Loss: 0.6852126641869545\n",
            "Epoch 10/10, Loss: 0.6183100469708442\n",
            "Accuracy with pool stride 1: 0.6585\n",
            "Epoch 1/10, Loss: 1.8031016533374786\n",
            "Epoch 2/10, Loss: 1.389977425813675\n",
            "Epoch 3/10, Loss: 1.2303229920864105\n",
            "Epoch 4/10, Loss: 1.1155793097019195\n",
            "Epoch 5/10, Loss: 1.0289360103607177\n",
            "Epoch 6/10, Loss: 0.9540739910602569\n",
            "Epoch 7/10, Loss: 0.8909262317419052\n",
            "Epoch 8/10, Loss: 0.8394632769823074\n",
            "Epoch 9/10, Loss: 0.7919620524644851\n",
            "Epoch 10/10, Loss: 0.742954083263874\n",
            "Accuracy with pool stride 2: 0.6499\n",
            "Epoch 1/10, Loss: 1.87454451918602\n",
            "Epoch 2/10, Loss: 1.440738485813141\n",
            "Epoch 3/10, Loss: 1.300919480919838\n",
            "Epoch 4/10, Loss: 1.2035318682193756\n",
            "Epoch 5/10, Loss: 1.1289529688358306\n",
            "Epoch 6/10, Loss: 1.0653550938367844\n",
            "Epoch 7/10, Loss: 1.0119627014398576\n",
            "Epoch 8/10, Loss: 0.9604541534185409\n",
            "Epoch 9/10, Loss: 0.9166823735237122\n",
            "Epoch 10/10, Loss: 0.8774718999862671\n",
            "Accuracy with pool stride 3: 0.6348\n",
            "Best pool stride: 1\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 8: Test different numbers of blocks\n",
        "num_blocks = [1, 2, 3, 4]\n",
        "accuracy_scores = []\n",
        "\n",
        "for num_block in num_blocks:\n",
        "    model = CNN(num_of_blocks=num_block, stride_conv=max_conv_stride, stride_pool=max_pool_stride, kernel_conv_size=max_conv_kernel_size, kernel_pool_size=max_pool_kernel_size, out_channels=16, in_channels=3)\n",
        "    model.fit(train_loader, epochs=5, lr=max_lr)\n",
        "    y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "    y_pred = model.predict(test_loader)\n",
        "    accuracy = accuracy_score(y_test, y_pred)\n",
        "    accuracy_scores.append(accuracy)\n",
        "    print(f'Accuracy with {num_block} blocks: {accuracy}')\n",
        "\n",
        "max_num_blocks = num_blocks[accuracy_scores.index(max(accuracy_scores))]\n",
        "print(f'Best number of blocks: {max_num_blocks}')\n",
        "\n",
        "plt.plot(num_blocks, accuracy_scores)\n",
        "plt.xlabel('Number of Blocks')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('Accuracy vs Number of Blocks')\n",
        "plt.show()\n",
        "\n",
        "print(f'Best Hyperparameters: blocks_num={max_num_blocks}, conv_stride={max_conv_stride}, pool_stride={max_pool_stride}, conv_kernel_size={max_conv_kernel_size}, pool_kernel_size={max_pool_kernel_size}')\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "qWgxdIjuRT7A",
        "outputId": "6b8e4bcd-6757-4f92-8970-a6b5f61638e8"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/5, Loss: 1.7075811076164245\n",
            "Epoch 2/5, Loss: 1.3503554167747498\n",
            "Epoch 3/5, Loss: 1.1955808534622192\n",
            "Epoch 4/5, Loss: 1.070667613863945\n",
            "Epoch 5/5, Loss: 0.969538590669632\n",
            "Accuracy with 1 blocks: 0.6307\n",
            "Epoch 1/5, Loss: 1.9686741981506348\n",
            "Epoch 2/5, Loss: 1.5425519759655\n",
            "Epoch 3/5, Loss: 1.374662782907486\n",
            "Epoch 4/5, Loss: 1.2712700394392014\n",
            "Epoch 5/5, Loss: 1.1932083696126938\n",
            "Accuracy with 2 blocks: 0.5825\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "RuntimeError",
          "evalue": "Calculated padded input size per channel: (4 x 4). Kernel size: (5 x 5). Kernel size can't be greater than actual input size",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-9-b938d4579529>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mnum_block\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnum_blocks\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCNN\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_of_blocks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnum_block\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstride_conv\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_conv_stride\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstride_pool\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_pool_stride\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel_conv_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_conv_kernel_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel_pool_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_pool_kernel_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout_channels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0min_channels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m     \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_loader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlr\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_lr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0my_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcatenate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0my\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtest_loader\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-1-186831009021>\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, num_of_blocks, stride_conv, stride_pool, kernel_conv_size, kernel_pool_size, out_channels, in_channels)\u001b[0m\n\u001b[1;32m     43\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mno_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m             \u001b[0msample_input\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0min_channels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 45\u001b[0;31m             \u001b[0msample_output\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample_input\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     46\u001b[0m             \u001b[0mlinear_input_dim\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msample_output\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/container.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m             \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/conv.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 460\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_conv_forward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbias\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    461\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    462\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0mConv3d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_ConvNd\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/conv.py\u001b[0m in \u001b[0;36m_conv_forward\u001b[0;34m(self, input, weight, bias)\u001b[0m\n\u001b[1;32m    454\u001b[0m                             \u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbias\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstride\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    455\u001b[0m                             _pair(0), self.dilation, self.groups)\n\u001b[0;32m--> 456\u001b[0;31m         return F.conv2d(input, weight, bias, self.stride,\n\u001b[0m\u001b[1;32m    457\u001b[0m                         self.padding, self.dilation, self.groups)\n\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mRuntimeError\u001b[0m: Calculated padded input size per channel: (4 x 4). Kernel size: (5 x 5). Kernel size can't be greater than actual input size"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = CNN(max_num_blocks, max_conv_stride, max_pool_stride, max_conv_kernel_size, max_pool_kernel_size, out_channels=16, in_channels=3)\n",
        "# Final model training and evaluation\n",
        "for i in range(10):\n",
        "    print(f'Iteration: {i+1}')\n",
        "    model.fit(train_loader, epochs=10, lr=max_lr)\n",
        "    y_test = np.concatenate([y for _, y in test_loader], axis=0)\n",
        "    y_pred = model.predict(test_loader)\n",
        "    accuracy = accuracy_score(y_test, y_pred)\n",
        "    print(f'Accuracy: {accuracy}')\n",
        "    if accuracy > 0.9:\n",
        "        break\n",
        "\n",
        "with torch.no_grad():\n",
        "    y_pred = model.predict(test_loader)\n",
        "    draw_confusion_matrix(y_pred, y_test)\n",
        "\n",
        "def draw_confusion_matrix(y_pred, y_true):\n",
        "    matrix = confusion_matrix(y_true, y_pred)\n",
        "    ConfusionMatrixDisplay(matrix, display_labels=range(10)).plot(include_values=True, cmap='Blues')"
      ],
      "metadata": {
        "id": "-G_7NXClRZ_E"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "kYJecEBCWkYJ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}